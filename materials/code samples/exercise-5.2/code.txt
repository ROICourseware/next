// books actions.ts




export async function deleteBook(id: number) {
  const email  = await checkUser();
  const repo = new BookRepository();
  const confidentialBook = await repo.getBookToEdit(id);
  if (email !== confidentialBook.owner) {
    redirect('/');
  }
  await repo.deleteBook(id);
  redirect('/books/mine');
}



// JSX for createPortal()

        <div className="custom-dialog-container">
            <dialog className="custom-dialog">
                <button className="close-button">X</button>
                <div className="modal-body">
                    {children}
                </div>
            </dialog>
        </div>


// CSS for global.css



.custom-dialog-container {
  display: flex;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
}

.custom-dialog {
  margin: auto;
  border: none;
  padding: 1rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  background-color: white;
  z-index: 1000;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  font-size: 1.2rem;
  cursor: pointer;
}

.modal-body {
  margin: 3rem 1rem 0.5rem 1rem;
}

.dialog-button {
  display: block;
  margin-left: auto;
  margin-right: auto;
  margin-top: 1rem;
}


